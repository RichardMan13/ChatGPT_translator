In Search of a Retransmission Algorithm in LoRaWAN Networks
Thiago Vinney Oliveira Almeida1, João Pedro Pastório1
Alvaro R. C. Souza1, Fabio A. Spanhol1, Edson T. de Camargo1
1Federal Technological University of Paraná (UTFPR) - Campus Toledo
Rua Cristo Rei, 19 - Vila Becker - CEP 85902-490 - Toledo - PR - Brazil
Abstract: The long-distance wireless communication network LoRaWAN has been widely adopted to provide connectivity to objects located in both urban centers and more remote locations. However, the LoRaWAN standard does not present a strategy to resend lost packets, despite featuring markings to request confirmation of receipt.an algorithm called CR-LoRaWAN to manage packet retransmission in LoRaWAN networks. Considering a scenario of tracking moving objects, the proposed algorithm was evaluated in simulation models as well as in implementation on a tracking device. The results show the efficiency of the proposed algorithm when compared to a strategy without confirmation.d despite having flags that allow an object to request the server to confirm the receipt of packets. This work proposes an algorithm named CR-LoRaWAN to manage packet retransmission in LoRaWAN networks. Considering a moving object tracking scenario, the proposed algorithm was evaluated in simulation models as well as implementation in a tracking device. The results show the efficiency of the proposed algorithm when comparing it to a strategy where there is no confirmation.

1. Introduction
The concept of the Internet of Things (IoT) defines Internet-connected objects capable of generating information and being represented in the world.of the virtual [Bardyn et al. 2016]. IoT encompasses various application domains, such as smart cities [Centenaro et al. 2016] and agriculture [Tzounis et al. 2017]. In these domains, applications have been developed, for example, to monitor soil moisture in agriculture [Rajkumar et al. 2017], collect air quality parameters in an urban center [Johnston et al. 2019], or track moving objects in real time over the Internet [da Silva et al. 2020]. Such applications share a dependence on a communication network to send and receive data.

A characteristic of IoT communication networks is their dynamic and interconnected topologyinstability due to battery weakening, mobility, noise, or temporary failure in the communication module [Pastório et al. 2020]. The challenge is even greater due to the wireless links of short and/or long-range employed in communication. Some applications accept the loss of some packets during a time interval, so it is not necessary to implement any delivery guarantee. On the other hand, certain applications do not tolerate losses. For example, an IoT end device aimed at detecting the concentration of toxic gases in an environment requires that the sent data be actually received by the server. Similarly, when tracking moving objects in real time over the Internet, it is essential for the tracking data to be received without loss.to track a moving object, it is desired to know its entire route even if in certain sections the geographic coordinates are not received due to obstacles. In this sense, despite temporary instabilities in communication, a strategy to ensure that the data was actually received is essential for the success of the application.

In the context of Long-Range Low Power Wide Area Networks (LPWAN) [Centenaro et al. 2016, Guibene et al. 2017], the open standard LoRaWAN stands out. Built on the Long Range (LoRa) wireless technology, the standard is characterized by covering extensive areas (up to 50 kilometers), offering a significant communication range, and operating at low power consumption, making it suitable for IoT applications.Achieving a low transfer rate and not requiring payment of usage fees. The LoRaWAN standard protocol offers a confirmation mechanism through flags present in the packet. However, this protocol does not have a manager that handles unconfirmed packets and schedules necessary retransmissions, as is the case with the Transmission Control Protocol (TCP) [Jacobson 1988]. It should be noted that an unconfirmed packet may have actually been lost, also impacting how the device temporarily stores the packets until confirmation.

The aim of this work is to propose an efficient algorithm for retransmitting packets in LoRaWAN networks. The CR algorithm is designed to effectively manage packet retransmissions in LoRaWAN networks, addressing the challenges posed by unreliable communication links and the need for reliable data transmission in IoT applications.The proposed LoRaWAN algorithm is evaluated through a case study using the open-source ns-3 simulator [nsnam 2021]. The case study stems from a partnership between the University and the Municipality aimed at developing a real-time tracking solution for selective waste collection trucks using a LoRaWAN network being deployed in the urban area of the municipality. The simulation's objective is to verify the efficiency of the confirmation algorithm in different operating scenarios, i.e., whether the proposed algorithm is capable of reducing the number of lost packets. The solution is also programmed and evaluated on a device called TTGO T-Beam. The T-Beam is amicrocontroller module built around the ESP32 chip structure, including a GPS module and LoRa transmitter.

As observed in previous works [da Silva et al. 2020, Rossato et al. 2020, Ferreira et al. 2020], devices used to track moving objects often lose packets when, for example, the object passes through locations with obstacles to the propagation of electromagnetic waves. The simulation results demonstrate that the CR-LoRaWAN algorithm is capable of mitigating packet loss, increasing the received packet rate by 15% in a scenario with 3–5 gateways and high obstruction. Meanwhile, results obtained from the T-Beam showed thatthe algorithm is capable of retransmitting most of the lost packets.

This article is organized as follows. Section 2 briefly reviews the LoRa and LoRaWAN standards. Section 3 describes the proposed retransmission algorithm and the evaluation methodology. Section 4 summarizes and discusses the obtained results. Finally, Section 5 presents the conclusion and possible future work.

2. LoRa and LoRaWAN
LoRa is a proprietary technology from Semtech. Its purpose is to perform radio frequency communication using Chirp spread spectrum modulation [Semtech Corporation 2015]. The technology is basically an implementation of the physical layer.Physical layer. Despite this, there are some link layer points defined in LoRa, such as frame format and error code techniques. On the other hand, LoRa does not implement medium access control, a fundamental link layer task.

LoRaWAN is an open network protocol maintained by the LoRa Alliance, which aims to manage a LPWAN. LoRaWAN offers security, bi-directional communication, mobility, and location services. Its structure presents three types of devices: end-devices, gateways, and network servers. These devices are distributed in a network with a star-of-stars topology, where.the gateways connect end devices in what would be a star topology, while the gateways connect to the network servers in a star topology, forming the star-of-stars. The network operates with a multiple access protocol based on the ALOHA protocol, where a device, upon having data to transmit, prepares the packet and sends it, without any kind of transmission medium probing [Beltramelli et al. 2020].

The end devices fall into three different classes, named class A, B, and C. The classes differ in the mode of transmission and reception, and only class A has mandatory implementation in the devices. This class is characterized byopening two reception windows (downlink) shortly after using a transmission window (uplink), so it can only receive data after sending some information. It is considered the most energy-efficient class, as it keeps the end device at rest outside of transmission and reception periods, i.e., during idle time [LoRa Alliance 2017]. Thus, it is recommended for devices that need little information from the application, and only after the sending processes, which can be seen as useful for devices such as sensors.

LoRaWAN networks support message confirmation, despite not having a collision detection protocol.message confirmation control mechanisms, such as Stop and Wait, Selective Retransmission, or Go-Back-N. To send messages that require confirmation receipt, simply change the value of the MType field in the packet. This 3-bit field is shown in Figure 1. To send an uplink message with confirmation, simply set the MType with the bits 100 (instead of 010), while downlink messages with confirmation use the MType with the bits 101 (instead of 011).

3. Materials and Methods
This section presents the proposed CR-LoRaWAN retransmission control algorithm and the means of obtaining results. The LoRaWAN system allows, natively, the sending of confirmable messages.message confirmation, but it does not implement a retransmission control solution. For this purpose, the CR-LoRaWAN algorithm (described in Section 3.1) will be employed. To obtain results, a programmed device and simulations via ns-3 are used. The use of simulation is useful to verify the impact of different variables, such as propagation conditions, number of gateways, and quantity of end devices operating. Investigating these parameters would be more difficult to control (in the case of propagation conditions) and more costly (in the case of Figura 1. Location of the MType field in the structure).number of gateways and active devices). Considerations about the programmed device and the simulation environment are made in subsections 3.2 and 3.3, respectively.

The LoRa parameters are the same for both the programmed device and the ns-3 simulation. The AU915 channel plan model was used, with 125 kHz uplink channels, a model described for use in Brazil by ANATEL. The spreading factor is initially set to SF=9 and the coding rate is given by CR=4/5.

3.1. LoRaWAN Retransmission Control Algorithm

The CR-LoRaWAN algorithm is proposed for optimizing the retransmission process in LoRa messages.

Source: Adapted from [LoRa Alliance 2017].eration in Class A devices and aims to deliver packets transmitted by these devices. It cannot be concluded in advance that the proposed algorithm is capable of delivering all packets, but it is expected that it will be able to ensure delivery in cases where communication does not suffer from a very long failure, given that the device has limited buffer, can also operate for a limited time, and it is not envisaged that it will keep the packets saved to attempt to retransmit in the next usage window.

The implementation of the algorithm was separated into two planes: in the control and management plane, the C language was used, combinedwith the LMIC library for managing access to the LoRaWAN network. In the storage plane (packet storage buffer), the C++ programming language was used. The LMIC library plays a fundamental role in the control process, especially in providing events of interest. Among the events, the message confirmation events, EVTXCOMPLETE, and entry into the LoRaWAN network, EVJOINED, are highlighted.

The flowchart of the CR-LoRaWAN algorithm is presented in Figure 2, divided into two main functionalities, shown in the figure as #1 and #2. Function #1 is responsible for retransmitting packets that were not previously confirmed, being activated whena confirmation message for any packet is received. This behavior is adopted because the receipt of a confirmation indicates that the device, at that moment, is in an area covered by a gateway, being an opportune moment to transmit any packets that may have failed previously. Thus, upon receiving a confirmation, the device checks if there are packets that have not received confirmation, and if so, it begins to retransmit them. If there are no packets in this situation, or if they have all already been retransmitted, it returns to function #2.

Figure 2. Flowchart of the proposed CR-LoRaWAN algorithm.

Function #2 is responsible for controlling the process of transmission and confirmation, and to facilitate the explanation, it is subdivided into three stages (from I to III), indicated by dashed rectangles in Figure 2. Stage I is responsible for the first attempt to send a group of messages. Four messages are sent without confirmation, and the fifth message closes the group, being sent with a request for confirmation. To send messages without confirmation, the MType field is configured with the value 010, indicating uplink messages with confirmation disabled. For messages with confirmation, the MType is configured with the value 100, indicating uplink messages with reception confirmation. If the confirmation is not received, the message is retransmitted up to a maximum number of attempts.If the confirmation is received within the windows opened by the operation in Class A, function #1 is executed, and subsequently returns to function #1. In the case where the confirmation does not occur, Stage II is executed.

Stage II was designed for the possibility that the service interruption is short, so that a new attempt to send the group should be sufficient for the packets to be confirmed. The sending process is similar to that of Stage I, and in case of success, the delay of this group of packets is reduced compared to placing them at the end of the transmission queue. In the event of confirmation reception, function #2 is executed; otherwise, Stage III is executed.Lastly, Stage III can be seen as the realization that the connection problem appears to be longer than expected, and it is uncertain when the communication will be resumed. Thus, all packets sent from this point onward have confirmation request activated (MType at 100). As soon as one of them is confirmed, it switches back to function #1 and subsequently, to the execution of function #2.

The idea of grouping messages in blocks of 5 arises from a compromise solution. Confirming each of the messages would require a large number of messages sent by the gateway and an increase in processing and energy expenditure due to the device's listening time for potential confirmations.Large message groups demand the storage of many messages and can also lead to the retransmission of many messages, given that the lack of confirmation of the group implies the retransmission of all messages.

3.2. Physical Device
The physical device selected for the experiment was the TTGO T-Beam, already evaluated in the context of the vehicle tracking problem in a previous work [da Silva et al. 2020], having presented the best results in terms of coverage.

The T-Beam is composed of a board built around a dual-core ESP32 chip together with a LoRa module, Semtech SX1276, and a GPS module, Ublox NEO-6M. The prThe device's programming used the LMIC library, modified by MCCI Corporation. LMIC implements a hardware abstraction and is responsible for the transmission management and communication processes in the end device. The TinyGPS++ library was used to program the GPS module.

This device will be used in a feasibility experiment of the proposed solution, in controlled tests. Subsequently, it will be necessary to investigate the impact of other system parameters, such as propagation scenarios and the impact of the quantity and location of gateways. To provide greater flexibility in these analyses, it will be employedThere was also the computational simulation, described below.
3.3. Simulation
Simulations were performed considering devices running the CR-LoRaWAN algorithm in various operational scenarios to evaluate the algorithm's impact on reducing lost packets. The open-source ns-3 simulator [nsnam 2021], version 3.31, was used to model the simulation scenarios. Ns-3 provides mechanisms for simulating networks in a controlled environment using a system of independent modules that can be combined to represent a complex network. One of the modules used was LoRaWAN [Magrin 2016], which provides a series of structures for reTo produce each component of a LoRa network.

For the transmission channel simulation, the log-distance path loss propagation model [Rappaport 2009] was used. The path loss in this model, in decibels (dB), is shown in Equation 1:

L = L0 + 10 * n * log10(d/d0);

where the distances are in meters, with d being the distance between transmitter and receiver; d0 a reference distance taken near the receiver; L0 the path loss at the reference distance d0 in the path loss exponent, which can assume different values depending on the environment to be simulated [Rappaport 2009] with n = 2 for an open-field model and 4 ≤ n ≤ 6 for a urban and suburban model.densely built areas.

To simulate the other effects that impact signal attenuation, the LoRaWAN module implements the TR 45.820 model for losses caused by buildings or obstructions and a correlation for shadowing [Magrin 2016]. To analyze the various operation scenarios of a LoRaWAN network, simulations were conducted with different configurations, varying the quantity and positioning of end devices and gateways present in the network. Different signal propagation environments were also considered based on the level of obstruction in the location where the devices are inserted, using the ns-3 buildings module for this purpose.to create the following three scenarios:

0 – unobstructed space, simulating an environment without buildings or shadowing, with n = 3.5;
1 – sparsely developed environment, with few building obstructions introduced using the buildings module, with n = 3.75;
2 – densely built environment, with a large number of obstructions introduced by the buildings module, common in urban scenarios, with n = 4.
4. Results and Discussion
This section presents the results obtained through the physical device and simulation. The simulation initially reports results varying the number of gateways, and then describes the algorithm comparison with a scenario.where there is no retransmission.
4.1. Physical Device
Tests with the T-Beam device in a controlled environment were conducted on the Toledo campus of UTFPR, with the device located a few meters from the gateway to ensure the most stable connection possible. In order to achieve signal loss in this scenario, a box completely covered with aluminum foil was used, based on the principle of a Faraday cage. This testing model was chosen to control the timing and duration of the signal interruption event. After the T-Beam connects to the network, the device sends several packets without interference until the signal stabilizes.Next, the device is kept in a Faraday cage for a few minutes to block the signal. At the end of this interruption period, the device is removed from the cage and kept on until the CR-LoRaWAN algorithm traverses the delay generated during the signalless time, that is, until it manages to retransmit the unconfirmed packets and those generated thereafter.

Two tests were conducted using this approach: in Test #1, the device is kept in the cage for about 1 minute, while in Test #2, the time is increased to around 2 minutes. The results are presented in Table 1. The column "Quantity of Affected Packets" correspondswhere the quantity of packets that were affected by the signal interruption, whether waiting for retransmission or waiting for others to be retransmitted and then transmitted. The "Quantity of Confirmed Packets" column corresponds to the total number of confirmed packets up to the moment the test is finished, which is done by manually turning off the device.
Time Interval (minutes) Quantity of Packets
signal loss testing generated confirmed affected
Test #101:05 05:21 34 30 20
01:21 05:25 35 30 17
01:32 05:36 38 35 18
Test #202:09 06:32 41 40 26
02:23 06:22 42 40 26
02:12 08:03 50 45 29
Table 1. Results of tests with the T-Beam device.
The results show a clear impact of signal interruption on the packet transmission and confirmation process, with a higher number of affected packets as the duration of the signal loss increases.The results indicate a confirmed traffic rate, i.e., the ratio between the quantity of confirmed packets and the quantity of generated packets, of 89% in Test #1 and 94% in Test #2. The tests did not reach full confirmation due to the confirmation nature of the proposed algorithm: as the algorithm confirms every 5 transmissions, unless the total number of packets is a multiple of 5, there will be unconfirmed packets. To address this issue, it may be necessary to send a special packet to indicate the end of transmission. In the final case of Test #2, a hypothesis for the last 5 packets not being confirmed is that the fiftieth packet was sent just before the end of the transmission.After the device has been turned off. Since there is a delay in sending a confirmation packet, it is possible that the device was not active when the confirmation was sent.
4.2. Simulations
4.2.1. Base Model
Before evaluating the CR-LoRaWAN algorithm, a base simulation was conducted to assess the impact of the quantity of gateways in the three different signal obstruction scenarios described in Section 3.3. In this first scenario, depicted in Figure 3, the displacement of the end device was simulated, and the percentage of packets received at the gateways was recorded. The positioning of the gateways follows the ongoing project for the deployment of the LoRa network.LoRa network in the city of Toledo [Rossato et al. 2020], and currently only Gateway 1 from Figure 3 is installed and operational. The gateways are added according to their numbering, and each point shown in Figure 4 was simulated 100 times. Figure 3. Representation of the first simulated scenario. 
In scenario 0 (low signal obstruction), as expected, the percentage of packets received decreases as the end device moves away from Gateway 1, reaching only 20-30%. Also as expected, the addition of more gateways (2-5) improves this situation. The behavior of the delivered packet rate as a function of the distance of the end device and the quantity of gateways is depicted in the graph in Figure 4.can be observed in Figure 4.
Figure 4. Result obtained from the first simulation in scenario 0.
With the introduction of signal obstructions in the propagation environment in scenarios 1 and 2, simulating urban environments, a marked increase in packet loss is noted. Even with the addition of gateways 2-5, a satisfactory percentage of packet delivery is not guaranteed. In scenario 2 (many obstructions and shadowing, typical of urban centers), towards the end of the route at gateways 3-5, the rate is limited to 50-60%. This behavior is shown in Figure 5.
Through these simulations, it is evident that despite the addition of gateways increasing the percentage of received packets, andin scenarios with many obstructions, packet loss persists. Therefore, the use of a retransmission algorithm becomes essential to try to reduce this loss. Figure 5. Result obtained from the first simulation in scenario 2.
4.2.2. Model without Retransmission vs. Model using the CR-LoRaWAN algorithm
Starting from the base model, the CR-LoRaWAN algorithm, already tested on the physical device with results presented in Section 4.1, was introduced. In the simulations, the impact of the algorithm was evaluated in two aspects: (a) packet delivery time and (b) packet delivery rate.
For the first aspect, the packet arrival time at the gateway and the time die arrival time at the gateway and the time elapsed from the generation of the packet at the end device to its reception at a gateway. Three gateways were in operation, and the end device was moving as illustrated in Figure 6. The behavior of the CR-LoRaWAN algorithm was analyzed in the face of three different obstruction scenarios. The results can be seen in Figures 7, 8, and 9, respectively.
Figure 6. Model to evaluate the packet delivery time with CR-LoRaWAN.
Considering initially Figure 7, only one data packet failed to be received in the first transmission, while all others were received without the need for retransmission. This can be explained by the fact that the scenariosimulate a propagation environment in an open area, without obstructions or shadowing. Although ideal, this model is quite distant from what occurs in real operations. Figure 7. CR-LoRaWAN algorithm in scenario 0.
Figure 8. CR-LoRaWAN algorithm in scenario 1.
Figure 9. CR-LoRaWAN algorithm in scenario 2.
Next, the level of obstructions and shadowing is increased, making the simulated model more realistic to real urban areas. This results in an increase in the number of unreceived packets and consequently in the retransmissions performed, as evidenced in Figures 8 and 9. For scenario 1, out of the 100 packets sent, 6 were not received and 15 packets were received without the need for retransmission.derived from retransmissions. This value increases in scenario 2, jumping to 13 and 32, respectively. Thus, it is concluded that with the increase in the level of obstructions present in the environment, there is a reduction in the number of received packets, making a retransmission algorithm relevant.

In the packet reception rate, the performance of a mobile end device with and without the use of the CR-LoRaWAN algorithm was compared. For this, different numbers of active gateways were considered, ranging from 1 to 5, added according to the order indicated in Figure 10. The device travels the same route repeatedly, generating 1000 packets. This route consists of a 3 km trajectory to the north, 3 km to the east, 3 km to the south, and 3 km to the west, aiming to vary the distance between the end device and the 5 gateways present in the network. The analysis expanded to the 3 different levels of obstruction, which were depicted in parallel in Figure 11. Upon analyzing Figure 11, it is noticeable that, regardless of the obstruction scenario and the quantity of gateways, the CR-LoRaWAN algorithm increases the percentage of received packets.
Figure 10. Model to evaluate the packet reception rate.
Figure 11. Comparison between the use or non-use of the CR-LoRaWAN algorithm in diverse obstruction scenarios.
For scenario 0, considering only one gatewayincrease in the percentage of received packets was 12.6%, ranging from 70.7% without the algorithm to 83.3% with the CR-LoRaWAN algorithm. In the same scenario, for two gateways, the increase was 7.8%, going from 88.4% to 96.2%. For 3–5 gateways, this increase remained close to 4%, rising from 95% to 99%. In scenario 1, with one gateway, an increase of 9% in the percentage of received packets was observed, going from 50.6% to 59.6%, with two gateways, this increment was 13.2%, going from 70% to 83.2%, while for 3–5 gateways, there was an increase of approximately 10%, ranging from approximately 85% to 95%. However, in the high obstruction scenario 2, with only one gateway, thegain in the percentage of received packets was lower than in the other scenarios, approximately 0.6%. For two gateways, there was an increase of 10.3%, from 50.8% to 61.1%. Finally, for 3–5 gateways, there was a more significant increase of approximately 15%, ranging from 70% to 85%.

5. Final Considerations
This work presented the CR-LoRaWAN algorithm for managing packet retransmission in LoRaWAN networks. The proposed algorithm was evaluated through the open-source ns-3 simulator and a programmable micro-controlled device called T-Beam, which features built-in GPS sensor and LoRa transmitter. In the results with the T-Beam, CR-LoRaWAN was able to confirm 89% and 94% dgenerated traffic for experiments Test #1 and Test #2, respectively. Simulation results show that even when adding more gateways in scenarios with higher obstruction, there is still a considerable packet loss. In this respect, it was noticed that as the level of obstructions in the environment increases, there is a reduction in the number of received packets, highlighting the importance of the CR-LoRaWAN algorithm. In scenarios with 3–5 gateways and high obstruction, there was an increase of approximately 15% in the packet reception rate when using the algorithm.

Regarding future work, more detailed analyses on the CR-LoRaWAN algorithm can be highlighted, along with the investigation of dynamic adaptation mechanisms for varying obstruction levels.well as operational optimizations in the algorithm itself, including comparison with other classical strategies. Regarding the evaluations, it is possible to analyze the algorithm when there are more devices using the LoRaWAN network, which can impact both the packet loss rate and the solution's feasibility, depending on the network's occupation with retransmissions. Retransmissions also impact the duty cycle of the devices, which is regulated in some countries. It is also necessary to analyze solutions for cases where the last packet of the group is confirmed, but some other packets in the same group are not, which can pose challenges for the overall reliability of the system.loss rate and the feasibility of the solution, depending on the network's occupancy with retransmissions. Retransmissions also impact the duty cycle of the devices, which is regulated in some countries. It is also necessary to analyze solutions for cases where the last packet of the group is confirmed, but some other packets in the same group are not, which can pose challenges for the overall reliability of the system.

This could lead to changes in the algorithm model. It is also possible to compare it with established strategies in computer networks, such as Stop and Wait, Go-Back-N, and Selective Retransmission. Finally, an analysis of interest can be seen in the energy consumption of the solution and the quantity of messages, to ascertain its viability in end devices with energy restrictions and also to characterize the energy efficiency of the algorithm.

References
Bardyn, J., Melly, T., Seller, O., and Sornin, N. (2016). IoT: The era of LPWAN is starting now. In ESSCIRC, pages 25–30.
Beltramelli, L., Mahmood, A., Osterberg, P., and Gidlund, M. (2020). LoRa beyond ALOHA: An invinvestigation of alternative random access protocols. IEEE Transactions on Industrial Informatics, pages 1–1.

Centenaro, M., Vangelista, L., Zanella, A., and Zorzi, M. (2016). Long-range communications in unlicensed bands: the rising stars in the IoT and smart city scenarios. IEEE Wireless Communications, 23(5):60–67.

da Silva, M., de Souza, J., Almeida, T., ´Alvaro Souza, Spanhol, F., and Camargo, E. (2020). Avaliação de dispositivos de rastreamento em uma rede LoRaWAN no contexto de cidades inteligentes. In Anais do IV Workshop de Computação Urbana, pages 1–14, Porto Alegre, RS, Brasil. SBC.

Ferreira, A., Molano, F., Costa, L., Foubert, B., Amadou, I., and Mitton, N. (2020). A study of the LoRa signal propagation in forest, urban, and suburban environments. Annals of Telecommunications.

Guibene, W., Nowack, J., Chalikias, N., Fitzgibbon, K., Kelly, M., and Prendergast, D. (2017). Evaluation of LPWAN technologies for smart cities: River monitoring use-case. In IEEE WCNCW, pages 1–5.

Jacobson, V . (1988). Congestion avoidance and control. In Symposium Proceedings on Communications Architectures and Protocols, SIGCOMM, pages 314–329, New York, NY, USA. ACM.

Johnston, S. J., Basford, P. J., Bulot, F. M. J., Apetroaie-Cristea, M., Easton, N. H. C., Davenport, C., Foster, G. L., Loxham, M., Morris, A. K. R., and Cox, S. J. (2019). City-scale particulate matter monitoring using LoRaWAN-based air quality IoT devices. Sensors, 19(1).

LoRa Alliance (2017). LoRaWAN™ 1.1 specification. LoRa Alliance, Beaverton, Oregon, United States.

Magrin, D. (2016). Network level performances of a LoRa system. Master’s thesis, Università degli Studi di Padova, Padua. Advisor: Lorenzo Vangelista.

nsnam (2021). ns3: Network Simulator. nsnam.

Pastório, A., Rodrigues, L., and de Camargo, E. (2020). A systematic literature review on fault tolerance in the Internet of Things. In Anais Estendidos do X Simpósio Brasileiro de Engenharia de Sistemas Computacionais, pages 57–64, Porto Alegre, RS, Brasil. SBC.

Rajkumar, M. N., Abinaya, S., and Kumar, V.V . (2017). Intelligent irrigation system— an IoT-based approach. In 2017 International Conference on Innovations in Green Energy and Healthcare Technologies (IGEHT), pages 1–5.

Rappaport, T. S. (2009). Wireless Communications, Principles and Practices. Pearson Prentice Hall, São Paulo, SP.

Rossato, J., Spanhol, F., and Camargo, E. (2020). Deployment and evaluation of a long-range, low-power wireless network for smart cities. In Anais do IV Workshop de Computação Urbana, pages 192–205, Porto Alegre, RS, Brasil. SBC.

Semtech Corporation (2015). AN1200.22 LoRa Modulation Basics. Semtech.

Tzounis, A., Katsoulas, N., Bartzanas, T., and Kittas, C. (2017). Internet of things in agriculture, recent advances and future challenges. Biosystems Engineering, 164:31–48.